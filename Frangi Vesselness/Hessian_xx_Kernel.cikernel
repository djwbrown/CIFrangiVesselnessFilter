/*
A Core Image kernel routine that calculates the Hessian in xx.
*/
/*
kernel vec4 hessian_xx(sampler src)
{
const float sigma = 10.0;
const float n_kernel = 6.0 * sigma + 1.0;
const float PI = 3.1415927;

vec2 dest = destCoord();

float temp = 0.0;
vec4 out_px = vec4(0.0, 0.0, 0.0, 1.0);

for (float x = ceil(-n_kernel / 2.0); x < (n_kernel / 2.0); x = x + 1.0) {
for (float y = ceil(-n_kernel / 2.0); y < (n_kernel / 2.0); y = y + 1.0) {
temp = 1.0 / (2.0 * PI * sigma*sigma*sigma*sigma) * (x*x / (sigma*sigma) - 1.0) * exp( -(x*x + y*y) / (2.0 * sigma*sigma) );
out_px.rgb = out_px.rgb + sample(src, samplerTransform(src, dest + vec2(-x, -y) )).rgb * temp;
}
}
return out_px;
}
*/

kernel vec4 channel_shift(sampler src)
{
vec4 px = sample(src, samplerCoord(src));
vec4 final;

final.r = px.g;
final.g = px.b;
final.b = px.r;
final.a = px.a;
return final;
}
